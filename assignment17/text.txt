Q1 Input a string of size n and update all the odd positions in the string to character ‘#’. Consider
0-based indexing.
-->
#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int main(){
    string s;
    cin>>s;
    for(int i=0;i<s.length();i++){
        if(i%2!=0){
            s[i]='#';
        }
    }
    cout<<s;

}

Q2 Input a string of length n and count all the consonants in the given string.
-->
#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int main(){
    string a;
    cin>>a;
    int count=0;
    for(int i=0;i<a.length();i++){
       if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u'){
       
      }
      else{
        count++;
      }
    }
    cout<<count;

}

Q3 Check whether the given string is palindrome or not.
-->
#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int main(){
    string a;
    cin>>a;
    string temp=a;
    reverse(temp.begin(),temp.end());
    if(temp==a)cout<<"yes";
    else cout<<"no";

}

Q4 Input a string of even length and reverse the second half of the string.
#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int main(){
    string a;
    cout<<"enter string of even length";
    cin>>a;
    
    reverse(a.begin()+a.length()/2,a.end());
   cout<<a;

}

Q5 Input a string of length less than 10 and convert it into integer without using builtin function.
-->
#include <iostream>
#include <string>
#include <algorithm>
#include <math.h>
using namespace std;
int main()
{
    string a;
    cout << "enter string of  length less than 9";
    cin >> a;
    int z = 0;

    for (int i = 0; i < a.length(); i++)
    {

        int b = a[i] - 48;

        double d = (a.length() - 1 - i);

        double c = pow(10, d);

        z = z + (b * c);
    }

    cout << z;
}