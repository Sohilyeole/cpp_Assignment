Q1 Given an integer array containing unique numbers, return power set, containing all the subsets of
the set.
-->
  void subsets(vector<int>&ori,int idx,vector<int>res,vector<vector<int>>&f){
    if(idx==ori.size()){
       f.push_back(res);
        return;
    }
    subsets(ori,idx+1,res,f);
    res.push_back(ori[idx]);
     subsets(ori,idx+1,res,f);
}
int  main(){
    vector<vector<int>>f;
           vector<int>nums={1,2,3};
        vector<int>v;
        subsets(nums,0,v,f);
        for(vector<int>ele : f){
            for(int n:ele){
                cout<<n<<" ";
            }
            cout<<endl;
        }
}

Q2 Given an integer array which may contain duplicate numbers, return power set, containing all the
subsets of the set.
-->
class Solution {
public:
   void helper(vector<int>& nums, vector<vector<int>>& ans, vector<int>& curr, int idx){
        ans.push_back(curr);  
        if(idx==nums.size()){
       f.push_back(res);
        return;
    }                           
        for(int i=idx;i<nums.size();i++){                      
            if(i>idx &&  nums[i]==nums[i-1]) 
            continue;                                          
            curr.push_back(nums[i]);                           
            helper(nums,ans,curr,i+1); 
                                             
        }
   }

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> ans; 
        vector<int> curr; 
        sort(nums.begin(),nums.end()); 
                     
        helper(nums,ans,curr,0);                      
        return ans; 
      } 
    
};

Q3 Given a string, find the length of the longest common substring from two given strings.
-->
#include<iostream>
#include<vector>
#include<string>
using namespace std;


void check(string s,string t,int count,int mxcount){
    if(s.length()==0|| t.length()==0){
        cout<<mxcount;
        return;
    }
    if(s[0]==t[0])check(s.substr(1),t.substr(1),count+1,mxcount);
    else{
        if(count>mxcount)check(s.substr(1),t.substr(1),0,count);
        else{
            check(s.substr(1),t.substr(1),0,mxcount);
        }

        
    }
}
int  main(){
    
          string s="goodmorning";
          string t="goodnight";
          check(s,t,0,0);
}

Q4 Program to find the factorial of a given number.
-->
#include<iostream>
#include<vector>
#include<string>
using namespace std;


int fact(int n){
    if(n==1)return 1;
   return n*fact(n-1);

}

int  main(){
    ///n>0
   int n=9;
   cout<<fact(n);
}

Q5 Program to convert a decimal number to binary.
-->
#include<iostream>
#include<vector>
#include<string>
using namespace std;


void binary(int n,string s){
    if(n==0){
      int d= stoi(s);
      cout<<d;
        return;
    }
   int q=n/2;
   int rem=n%2;
   binary(q,s+to_string(rem));

}

int  main(){
    
   int n=15;
  binary(n,"");
}